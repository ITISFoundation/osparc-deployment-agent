name: Deployment-agent

on:
  push:
    paths-ignore:
      - "*.md"
      - "*.png"
      - "*.svg"
      - "docs/**"
      - ".vscode/**"
  pull_request:
    paths-ignore:
      - "*.md"
      - "*.png"
      - "*.svg"
      - "docs/**"
      - ".vscode/**"

env:
  # secrets can be set in settings/secrets on github
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  unit-test-deployment-agent:
    timeout-minutes: 10
    name: "[unit] deployment-agent"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.9]
        os: [ubuntu-20.04]
        docker_buildx: [v0.5.1]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ matrix.docker_buildx }}
          driver: docker
      - name: setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: show system versions
        run: ./ci/helpers/show_system_versions.bash
      - uses: actions/cache@v3
        name: getting cached data
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: install
        run: ./ci/github/unit-testing/deployment-agent.bash install
      - name: test
        run: ./ci/github/unit-testing/deployment-agent.bash test
      - uses: codecov/codecov-action@v2.1.0
        with:
          flags: unittests #optional

  integration-test-deployment-agent:
    timeout-minutes: 10
    name: "[integration] deployment-agent"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.9]
        os: [ubuntu-20.04]
        docker_buildx: [v0.5.1]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ matrix.docker_buildx }}
          driver: docker
      - name: setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: show system versions
        run: ./ci/helpers/show_system_versions.bash
      - uses: actions/cache@v3
        name: getting cached data
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: install
        run: ./ci/github/integration-testing/deployment-agent.bash install
      - name: test
        run: ./ci/github/integration-testing/deployment-agent.bash test
      - uses: codecov/codecov-action@v2.1.0
        with:
          flags: integrationtests #optional

  system-test-deployment-agent:
    timeout-minutes: 10
    name: "[system] deployment-agent"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.9]
        os: [ubuntu-20.04]
        docker_buildx: [v0.5.1]
      fail-fast: false
    steps:
      - name: set PR default variables
        # only pushes have access to the docker credentials, use a default
        if: github.event_name == 'pull_request'
        run: |
          export TMP_DOCKER_REGISTRY=${GITHUB_REPOSITORY%/*}
          echo "DOCKER_REGISTRY=${TMP_DOCKER_REGISTRY,,}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ matrix.docker_buildx }}
          driver: docker
      - name: Install envsubst
        run: sudo apt update && sudo apt-get install -y gettext-base
      - name: setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: show system versions
        run: ./ci/helpers/show_system_versions.bash
      - uses: actions/cache@v3
        name: getting cached data
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: install
        run: ./ci/github/system-testing/deployment-agent.bash install
      - name: test
        run: ./ci/github/system-testing/deployment-agent.bash test
      - uses: codecov/codecov-action@v2.1.0
        with:
          flags: systemtests #optional
      - name: set owner variable
        run: echo "OWNER=${GITHUB_REPOSITORY%/*}" >> $GITHUB_ENV
      - name: deploy master
        if: github.ref == 'refs/heads/master'
        env:
          TAG_PREFIX: master-github
        run: |
          ./ci/deploy/deployment-agent.bash
